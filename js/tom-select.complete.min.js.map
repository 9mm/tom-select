{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.ts","../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/strings.js","../../node_modules/@orchidjs/unicode-variants/dist/esm/index.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../node_modules/@orchidjs/sifter/lib/utils.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/tom-select.complete.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/caret_position/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n","/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"i̇ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂṧṩ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Compatibility Decomposition without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * @param {string} str\n */\n\nconst decompose = str => {\n  if (str.match(/[\\u0f71-\\u0f81]/)) {\n    return toArray(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n      return result + normalize(char);\n    }, '');\n  }\n\n  return normalize(str);\n};\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return decompose(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  });\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      let decomposed = normalize(composed);\n      let recomposed = normalize(decomposed, 'NFC');\n\n      if (recomposed === composed && folded === decomposed) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { asciifold, code_points, decompose, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n","\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\n\t\taddEvent(focus_node,'resize',\t\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isDisabled ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n","/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","Array","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","latin_condensed","a","aa","ae","ao","au","av","ay","b","c","d","e","f","g","h","j","k","l","m","o","oe","oi","oo","ou","q","r","s","t","th","tz","u","v","vy","w","y","z","hv","latin","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","match","decompose","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","add","code_point_min","code_point_max","composed","String","fromCharCode","decomposed","code_point","generator","generateMap","multi_char","set","sort","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","len","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","_code_points","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","key","isArray","iterate","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","fld","direction","sort_fld","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","settings_element","dataset","json","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","super","requested","loaded","static","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","optgroup_header","escape","option_create","no_results","not_loading","callbacks","initialize","change","item_add","item_remove","item_select","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","addItems","setMaxItems","eventName","begin","swap","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","html","has_create_option","active_group","groups","groups_order","same_query","elements","results","active_option","show_dropdown","closest","opt_value","opt_hash","option_el","getOption","includes","group_fragment","createDocumentFragment","$id","toString","grp_a","grp_b","$order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","orig_onOptionSelect","UpdateCheckbox","checkbox","HTMLInputElement","checked","orig_render_option","rendered","prepend","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","first_option","no_more_results"],"mappings":"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"}