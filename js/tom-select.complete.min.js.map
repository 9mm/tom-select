{"version":3,"file":"tom-select.complete.min.js","sources":["../../src/contrib/microevent.js","../../node_modules/@orchidjs/sifter/dist/esm/diacritics.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/getSettings.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/plugins/change_listener/plugin.ts","../../src/plugins/checkbox_options/plugin.ts","../../src/plugins/clear_button/plugin.ts","../../src/plugins/drag_drop/plugin.ts","../../src/plugins/dropdown_header/plugin.ts","../../src/plugins/dropdown_input/plugin.ts","../../src/plugins/input_autogrow/plugin.ts","../../src/plugins/no_backspace_delete/plugin.ts","../../src/plugins/no_active_items/plugin.ts","../../src/plugins/optgroup_columns/plugin.ts","../../src/plugins/remove_button/plugin.ts","../../src/plugins/restore_on_backspace/plugin.ts","../../src/plugins/virtual_scroll/plugin.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\n\nvar code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\n\nfunction asciifold(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n}\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\n\n\nfunction generateDiacritics() {\n  var latin_convert = {\n    'l·': 'l',\n    'ʼn': 'n',\n    'æ': 'ae',\n    'ø': 'o',\n    'aʾ': 'a',\n    'dž': 'dz'\n  };\n  var diacritics = {}; //var no_latin\t= [];\n\n  code_points.forEach(code_range => {\n    for (let i = code_range[0]; i <= code_range[1]; i++) {\n      let diacritic = String.fromCharCode(i);\n      let latin = diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n      if (latin == diacritic) {\n        //no_latin.push(diacritic);\n        continue;\n      }\n\n      latin = latin.toLowerCase();\n\n      if (latin in latin_convert) {\n        latin = latin_convert[latin];\n      }\n\n      if (!(latin in diacritics)) {\n        diacritics[latin] = latin + latin.toUpperCase();\n      }\n\n      diacritics[latin] += diacritic;\n    }\n  }); //console.log('no_latin',JSON.stringify(no_latin));\n\n  return diacritics;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\n\nvar diacritics = null;\nfunction diacriticRegexPoints(regex) {\n  if (diacritics === null) {\n    diacritics = generateDiacritics();\n  }\n\n  for (let latin in diacritics) {\n    if (diacritics.hasOwnProperty(latin)) {\n      regex = regex.replace(new RegExp(latin, 'g'), '[' + diacritics[latin] + ']');\n    }\n  }\n\n  return regex;\n}\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n\nexport { asciifold, diacriticRegexPoints, generateDiacritics };\n//# sourceMappingURL=diacritics.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from './diacritics.js';\n\n// @ts-ignore\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttr(obj, name) {\n  if (!obj) return;\n  return obj[name];\n}\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nfunction getAttrNesting(obj, name) {\n  if (!obj) return;\n  var names = name.split(\".\");\n\n  while (names.length && (obj = obj[names.shift()]));\n\n  return obj;\n}\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n * @param {object} token\n * @return {number}\n */\n\nfunction scoreValue(value, token, weight) {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n}\nfunction escape_regex(str) {\n  return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n}\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nfunction propToArray(obj, key) {\n  var value = obj[key];\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n}\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n * @param {array|object} object\n */\n\nfunction iterate(object, callback) {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n}\nfunction cmp(a, b) {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n}\n\nexport { cmp, escape_regex, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { escape_regex, iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nimport { diacriticRegexPoints, asciifold } from './diacritics.js';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nclass Sifter {\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   * @constructor\n   * @param {array|object} items\n   * @param {object} items\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        regex = escape_regex(word);\n\n        if (this.settings.diacritics) {\n          regex = diacriticRegexPoints(regex);\n        }\n\n        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n        regex = new RegExp(regex, 'i');\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {function}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     * @param {TToken} token\n     * @param {object} data\n     * @return {number}\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field]);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var i = 0,\n            score,\n            sum = 0;\n\n        for (; i < token_count; i++) {\n          score = scoreObject(tokens[i], data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var i, n, sort_fld, sort_flds_count, multiplier, implicit_score;\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty || options.sort,\n          sort_flds = [],\n          multipliers = [];\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     * @param  {string} name\n     * @param  {object} result\n     * @return {string}\n     */\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          sort_flds.push(sort[i]);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      }\n    } else {\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          sort_flds.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    for (i = 0, n = sort_flds.length; i < n; i++) {\n      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n    } // build function\n\n\n    sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    } else if (sort_flds_count === 1) {\n      sort_fld = sort_flds[0].field;\n      multiplier = multipliers[0];\n      return function (a, b) {\n        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n      };\n    } else {\n      return function (a, b) {\n        var i, result, field;\n\n        for (i = 0; i < sort_flds_count; i++) {\n          field = sort_flds[i].field;\n          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n\n        return 0;\n      };\n    }\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n\n      if (Array.isArray(options.fields) && typeof options.fields[0] !== 'object') {\n        var fields = [];\n        options.fields.forEach(fld_name => {\n          fields.push({\n            field: fld_name\n          });\n        });\n        options.fields = fields;\n      }\n\n      options.fields.forEach(field_params => {\n        weights[field_params.field] = 'weight' in field_params ? field_params.weight : 1;\n      });\n    }\n\n    query = asciifold(query + '').toLowerCase().trim();\n    return {\n      options: options,\n      query: query,\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    var fn_sort;\n    var fn_score;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (item, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    fn_sort = self._getSortFunction(search);\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport default Sifter;\n//# sourceMappingURL=sifter.js.map\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:() => any) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\nimport { TomOption } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/dist/esm/sifter.js';\nimport { escape_regex } from '@orchidjs/sifter/dist/esm/utils.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]');\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= get_hash(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self._render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tif( header ) group_options.append(header);\n\t\t\t\tgroup_options.append(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.append(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.append(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tdropdown_content.append(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\treturn this.rendered('option',hashed);\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\t//if (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected = document.createDocumentFragment();\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\toption_el.selected = true;\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\tselected.append(option_el);\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tsetAttr(option_el,{selected:null});\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]');\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tfor( i = 0; i < self.items.length; i++ ){\n\t\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.contains(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// prepend all of the selected options\n\t\t\tself.input.prepend(selected);\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.clearActiveItems();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t_render( templateName:string, data?:any ):HTMLElement{\n\t\tvar value, id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:'item'|'option', value:null|string ):null|HTMLElement{\n\t\treturn value !== null && this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: {},\n\trequested: {},\n\tloaded: {}\n};\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\treturn class mixin extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} name\n\t\t */\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport getSettings from '../../getSettings.js';\nimport { TomSettings } from '../../types/settings';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('change_listener',function(this:TomSelect){\n\tconst self\t\t= this;\n\tconst joined\t= (arr:string[]):string => arr.join(self.settings.delimiter);\n\n\taddEvent(self.input,'change',()=>{\n\n\t\tvar settings\t= getSettings( self.input, {delimiter:self.settings.delimiter} as TomSettings );\n\n\t\t// prevent infinite loops\n\t\tif( joined(self.items) == joined(settings.items) ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\t\tself.setValue(settings.items);\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('checkbox_options',function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input') as HTMLInputElement;\n\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}else{\n\t\t\t\tcheckbox.checked = false;\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = function(data){\n\t\t\tvar rendered = getDom(orig_render_option.apply(self, arguments));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',function( evt:KeyboardEvent, option:HTMLElement ){\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.apply(self, arguments);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\n\n\nTomSelect.define('clear_button',function(this:TomSelect, options) {\n\tvar self = this;\n\n\toptions = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t\t}\n\t}, options);\n\n\tself.hook('after','setup',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\t\t\tself.clear();\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n});\n","/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('drag_drop',function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',function(){\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.apply(self, arguments);\n\t});\n\n\tself.hook('instead','unlock',function(){\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.apply(self, arguments);\n\t});\n\n\tself.hook('after','setup',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\n\n\nTomSelect.define('dropdown_header',function(this:TomSelect, options) {\n\tvar self = this;\n\n\toptions = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, options);\n\n\tself.hook('after','setup',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input ) as HTMLInputElement;\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('after','setup',()=>{\n\n\t\t// set tabIndex on wrapper\n\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : ''+self.tabIndex});\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt) => {\n\n\t\t\tif( self.control.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch( (<KeyboardEvent>evt).keyCode ){\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { addEvent } from '../../utils';\n\nTomSelect.define('input_autogrow', function(this:TomSelect) {\n\n\tvar self\t\t\t\t\t= this;\n\n\tself.hook('after','setup',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\tif( self.items.length > 0 ){\n\t\t\t\ttest_input.textContent\t= control.value;\n\t\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t\t}else{\n\t\t\t\tcontrol.style.width\t\t= '';\n\t\t\t}\n\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_backspace_delete', function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\n\tthis.hook('instead','deleteSelection',function(){\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.apply(self, arguments);\n\t\t}\n\n\t\treturn false;\n\t});\n\n});\n","/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\n\nTomSelect.define('no_active_items', function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n});\n","/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nTomSelect.define('optgroup_columns', function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',function(evt){\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.apply(self,arguments);\n\t\t}\n\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= optgroup.querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ];\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n});\n","/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\n\nTomSelect.define('remove_button',function(this:TomSelect, options) {\n\n\toptions = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, options);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = function(){\n\n\t\t\tvar rendered = getDom(orig_render_item.apply(self, arguments));\n\n\t\t\tvar close_button = getDom(html);\n\t\t\trendered.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif (self.isLocked) return;\n\n\t\t\t\tvar value = rendered.dataset.value;\n\t\t\t\tself.removeItem(value);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t});\n\n\t\t\treturn rendered;\n\t\t};\n\n\t});\n\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext:(option:TomOption)=>string,\n};\n\nTomSelect.define('restore_on_backspace',function(this:TomSelect, options:TPluginOptions) {\n\tvar self = this;\n\n\toptions.text = options.text || function(option:TomOption){\n\t\treturn option[self.settings.labelField];\n\t};\n\n\tself.on('item_remove',function(value){\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n});\n","/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select.js';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\n\nTomSelect.define('virtual_scroll',function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t= self.loadCallback;\n\n\tvar pagination\t\t\t\t\t= {};\n\tvar dropdown_content;\n\tvar loading_more\t\t\t\t= false;\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t\treturn;\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tfunction canLoadMore(query):boolean{\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t// set the next url that will be\n\tself.setNextUrl = function(value:string,next_url:any):void{\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = function(query:string):any{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl(query);\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',(value:string, options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions();\n\t\t}\n\n\t\torig_loadCallback.call( self, value, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ) option.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.hook('after','setup',()=>{\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:function(){\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:function(){\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',function(){\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent < 0.95 ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n});\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","code_points","asciifold","str","normalize","replace","toLowerCase","diacritics","diacriticRegexPoints","regex","latin_convert","code_range","i","diacritic","String","fromCharCode","latin","toUpperCase","generateDiacritics","hasOwnProperty","RegExp","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","a","b","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","sort_fld","sort_flds_count","multiplier","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","optsUser","assign","fld_name","field_params","trim","total","nesting","fn_sort","fn_score","item","filter","limit","slice","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","val","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","Math","max","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","getSettings","input","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","required","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","_render","role","haspopup","escapeQuery","label","for","label_id","width","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","getSearchOptions","calculateScore","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","parent","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","joined","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","orig_render_option","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","tabindex","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","scrollHeight"],"mappings":"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"}