{"version":3,"file":"tom-select.base.min.js","sources":["../../src/contrib/microevent.js","../../node_modules/@orchidjs/sifter/dist/esm/diacritics.js","../../node_modules/@orchidjs/sifter/dist/esm/utils.js","../../node_modules/@orchidjs/sifter/dist/esm/sifter.js","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/getSettings.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events,callback){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events, fct){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events, fct){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events, ...args){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self,args );\n\t\t\t}\n\t\t});\n\t}\n};\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\n\nvar code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\n\nconst asciifold = str => {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n};\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\n\n\nconst generateDiacritics = () => {\n  var latin_convert = {\n    'l·': 'l',\n    'ʼn': 'n',\n    'æ': 'ae',\n    'ø': 'o',\n    'aʾ': 'a',\n    'dž': 'dz'\n  };\n  var diacritics = {}; //var no_latin\t= [];\n\n  code_points.forEach(code_range => {\n    for (let i = code_range[0]; i <= code_range[1]; i++) {\n      let diacritic = String.fromCharCode(i);\n      let latin = diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n      if (latin == diacritic) {\n        //no_latin.push(diacritic);\n        continue;\n      }\n\n      latin = latin.toLowerCase();\n\n      if (latin in latin_convert) {\n        latin = latin_convert[latin];\n      }\n\n      if (!(latin in diacritics)) {\n        diacritics[latin] = latin + latin.toUpperCase();\n      }\n\n      diacritics[latin] += diacritic;\n    }\n  }); //console.log('no_latin',JSON.stringify(no_latin));\n\n  return diacritics;\n};\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\n\nvar diacritics = null;\nconst diacriticRegexPoints = regex => {\n  if (diacritics === null) {\n    diacritics = generateDiacritics();\n  }\n\n  for (let latin in diacritics) {\n    if (diacritics.hasOwnProperty(latin)) {\n      regex = regex.replace(new RegExp(latin, 'g'), '[' + diacritics[latin] + ']');\n    }\n  }\n\n  return regex;\n};\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * rollup will bundle this function (and the DIACRITICS constant) unless commented out\n *\nvar diacriticRegex = (function() {\n\n\tvar list = [];\n\tfor( let letter in DIACRITICS ){\n\n\t\tif( letter.toLowerCase() != letter && letter.toLowerCase() in DIACRITICS ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( DIACRITICS.hasOwnProperty(letter) ){\n\n\t\t\tvar replace = letter + DIACRITICS[letter];\n\t\t\tif( letter.toUpperCase() in DIACRITICS ){\n\t\t\t\treplace += letter.toUpperCase() + DIACRITICS[letter.toUpperCase()];\n\t\t\t}\n\n\t\t\tlist.push({let:letter,pat:'['+replace+']'});\n\t\t}\n\t}\n\n\treturn function(regex:string):string{\n\t\tlist.forEach((item)=>{\n\t\t\tregex = regex.replace( new RegExp(item.let,'g'),item.pat);\n\t\t});\n\t\treturn regex;\n\t}\n})();\n*/\n\nexport { asciifold, diacriticRegexPoints, generateDiacritics };\n//# sourceMappingURL=diacritics.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from './diacritics.js';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\nconst escape_regex = str => {\n  return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, escape_regex, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n","/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { escape_regex, iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nimport { diacriticRegexPoints, asciifold } from './diacritics.js';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        regex = escape_regex(word);\n\n        if (this.settings.diacritics) {\n          regex = diacriticRegexPoints(regex);\n        }\n\n        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'i') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {function}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field]);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var i = 0,\n            score,\n            sum = 0;\n\n        for (; i < token_count; i++) {\n          score = scoreObject(tokens[i], data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var i, n, implicit_score;\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort,\n          sort_flds = [],\n          multipliers = [];\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          sort_flds.push(sort[i]);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      }\n    } else {\n      for (i = 0, n = sort_flds.length; i < n; i++) {\n        if (sort_flds[i].field === '$score') {\n          sort_flds.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    for (i = 0, n = sort_flds.length; i < n; i++) {\n      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    } else if (sort_flds_count === 1) {\n      const sort_fld = sort_flds[0].field;\n      const multiplier = multipliers[0];\n      return function (a, b) {\n        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n      };\n    } else {\n      return function (a, b) {\n        var i, result, field;\n\n        for (i = 0; i < sort_flds_count; i++) {\n          field = sort_flds[i].field;\n          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n          if (result) return result;\n        }\n\n        return 0;\n      };\n    }\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    query = asciifold(query + '').toLowerCase().trim();\n    return {\n      options: options,\n      query: query,\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (item, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport default Sifter;\n//# sourceMappingURL=sifter.js.map\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:() => any) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:() => void) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/dist/esm/sifter.js';\nimport { escape_regex } from '@orchidjs/sifter/dist/esm/utils.js';\nimport { TomSettings } from './types/settings';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t: ReturnType<Sifter['search']> = null;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {'item':{[key:string]:HTMLElement},'option':{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\t\tthis.setup();\n\t}\n\n\n\t// methods\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\n\t/**\n\t * Creates all elements and sets up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\n\t\tvar self = this;\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\twrapper.append(control);\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tdropdown.append(dropdown_content);\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tself.control\t\t\t= control;\n\t\tself.control_input\t\t= control_input;\n\t\tself.wrapper\t\t\t= wrapper;\n\t\tself.dropdown\t\t\t= dropdown;\n\t\tself.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tself._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]');\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element, don't re-render if we\n\t\t\tlet option\t\t\t= self.options[results.items[i].id];\n\t\t\tlet opt_value\t\t= get_hash(option[self.settings.valueField]);\n\t\t\tlet option_el\t\t= self.getOption(opt_value);\n\t\t\tif( !option_el ){\n\t\t\t\toption_el = self._render('option', option);\n\t\t\t}\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tif( header ) group_options.append(header);\n\t\t\t\tgroup_options.append(groups[optgroup]);\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\thtml.append(group_html);\n\n\t\t\t} else {\n\t\t\t\thtml.append(groups[optgroup]);\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tdropdown_content.append(html);\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:string) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else{\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\treturn this.rendered('option',hashed);\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\t//if (typeof callback !== 'function') callback = () => {};\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data:TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected = document.createDocumentFragment();\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\toption_el.selected = true;\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\tselected.append(option_el);\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tsetAttr(option_el,{selected:null});\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]');\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tfor( i = 0; i < self.items.length; i++ ){\n\t\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.contains(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// prepend all of the selected options\n\t\t\tself.input.prepend(selected);\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\titem.remove();\n\t\t}\n\n\t\tself.items = [];\n\t\tself.lastQuery = null;\n\t\tself.setCaret(0);\n\t\tself.clearActiveItems();\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.showInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:string, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t_render( templateName:string, data?:any ):HTMLElement{\n\t\tvar value, id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:'item'|'option', value:null|string ):null|HTMLElement{\n\t\treturn value !== null && this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: {},\n\trequested: {},\n\tloaded: {}\n};\n\nexport default function MicroPlugin(Interface){\n\n\tInterface.plugins = {};\n\n\treturn class mixin extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name, fn){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins) {\n\t\t\tvar i, n, key;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\n\t\t\t\t\t\tqueue.push(plugins[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\n\t\t\t\t\t\tqueue.push(plugins[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (queue.length) {\n\t\t\t\tself.require(queue.shift());\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} name\n\t\t */\n\t\tloadPlugin(name) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t * @param {string} name\n\t\t */\n\t\trequire(name) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomSettings } from './types/settings';\nimport { TomOption } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el) => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tvar values, option;\n\n\t\tvar data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tvalues = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\toption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","code_points","asciifold","str","normalize","replace","toLowerCase","diacritics","diacriticRegexPoints","regex","latin_convert","code_range","i","diacritic","String","fromCharCode","latin","toUpperCase","generateDiacritics","hasOwnProperty","RegExp","getAttr","obj","name","getAttrNesting","part","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","a","b","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","slice","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","val","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","Math","max","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","require","loadPlugin","plugin","Error","MicroPlugin","input_arg","dir","control_input","dropdown","control","dropdown_content","order","input","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","values","data_raw","opt","init_textbox","getSettings","required","setupOptions","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","_render","role","haspopup","escapeQuery","label","for","label_id","width","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","getSearchOptions","calculateScore","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","parent","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new"],"mappings":"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"}